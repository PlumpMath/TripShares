@inject IBlockchainRepository BlockchainRepository
@inject UserManager<ApplicationUser> UserManager
@model WalletViewModel
@{
    ViewData["Title"] = "Wallet";
    ViewData.AddActivePage(ManageNavPages.Wallet);
}

@if (!Model.HasGeneratedWallet)
{
    <h5>No wallet generated yet</h5>
    <a asp-action="GenerateWallet" class="btn btn-primary">Generate Wallet</a>
}
else
{
    var user = await UserManager.GetUserAsync(User);
    var balances = await BlockchainRepository.GetBalance(NETWORK_TYPE.TESTNET, user.Address);
    var str = await BlockchainRepository.GetTokenBalance(NETWORK_TYPE.TESTNET, Helper.ReverseHex(user.ScriptHash));
    balances.TSR = str;
    <h2>@ViewData["Message"]</h2>
    <form class="form-horizontal" method="post">
        <div class="form-group">
            <label class="col-sm-2 control-label">NEO:</label>
            <div class="col-sm-10">
                <input class="form-control" type="text" value=@balances.NEO disabled>
            </div>
        </div>
        <div class="form-group">
            <label class="col-sm-2 control-label">GAS:</label>
            <div class="col-sm-10">
                <input class="form-control" type="text" value=@balances.GAS disabled>
            </div>
        </div>
        <div class="form-group">
            <label class="col-sm-2 control-label">TSR:</label>
            <div class="col-sm-10">
                <input class="form-control" type="text" value=@balances.TSR disabled>
            </div>
        </div>
        <div class="form-group">
            <label class="col-sm-2 control-label">Address</label>
            <div class="col-sm-10">
                <input class="form-control" type="text" value=@Model.WalletInfo.address disabled>
            </div>
        </div>
        <div class="form-group">
            <label class="col-sm-2 control-label">WIF</label>
            <div class="col-sm-10">
                <input class="form-control" type="text" value=@Model.WalletInfo.wif disabled>
            </div>
        </div>
        <div class="form-group">
            <label class="col-sm-2 control-label">ScriptHash (DriverID)</label>
            <div class="col-sm-10">
                <input class="form-control" type="text" value=@Model.WalletInfo.scriptHash disabled>
            </div>
        </div>
        @if (Model.WalletInfo.privateKey != null)
        {
            <div class="form-group">
                <label class="col-sm-2 control-label">Private Key</label>
                <div class="col-sm-10">
                    <input class="form-control" type="text" value=@Model.WalletInfo.privateKey disabled>
                </div>
            </div>
        }
    </form>
}

@section Scripts {
    @await Html.PartialAsync("_ValidationScriptsPartial")
}
