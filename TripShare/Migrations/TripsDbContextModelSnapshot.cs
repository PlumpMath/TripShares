// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using System;
using TripShare.Models;

namespace TripShare.Migrations
{
    [DbContext(typeof(TripsDbContext))]
    partial class TripsDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.0-rtm-26452")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("TripShare.Models.Passenger", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("TripId");

                    b.Property<string>("UserId");

                    b.HasKey("Id");

                    b.HasIndex("TripId");

                    b.ToTable("Passengers");
                });

            modelBuilder.Entity("TripShare.Models.Refund", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Address")
                        .IsRequired();

                    b.Property<int>("Amount");

                    b.Property<bool>("Done");

                    b.HasKey("Id");

                    b.ToTable("Refunds");
                });

            modelBuilder.Entity("TripShare.Models.Trip", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("AdditionalWay");

                    b.Property<DateTime>("CancelDate");

                    b.Property<DateTime>("Date");

                    b.Property<int>("Deposit");

                    b.Property<string>("DriverId")
                        .IsRequired();

                    b.Property<string>("From")
                        .IsRequired();

                    b.Property<int>("Price");

                    b.Property<int>("SeatsCount");

                    b.Property<string>("To")
                        .IsRequired();

                    b.HasKey("Id");

                    b.ToTable("Trips");
                });

            modelBuilder.Entity("TripShare.Models.Passenger", b =>
                {
                    b.HasOne("TripShare.Models.Trip")
                        .WithMany("Passengers")
                        .HasForeignKey("TripId");
                });
#pragma warning restore 612, 618
        }
    }
}
